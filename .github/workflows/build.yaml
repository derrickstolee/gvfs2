name: VFS for Git

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master, releases/shipped ]

jobs:
  build:
    runs-on: windows-2019
    name: Build and Unit Test

    strategy:
      matrix:
        configuration: [ Debug, Release ]

    steps:
    - name: Checkout source
      uses: actions/checkout@v2
      with:
        path: src

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.201

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build VFS for Git (${{ matrix.configuration }})
      shell: cmd
      run: src\scripts\Build.bat ${{ matrix.configuration }}

    - name: Run unit tests (${{ matrix.configuration }})
      shell: cmd
      run: src\scripts\RunUnitTests.bat ${{ matrix.configuration }}

    - name: Create build artifacts
      shell: cmd
      run: src\scripts\CreateBuildArtifacts.bat ${{ matrix.configuration }} artifacts

    - name: Upload functional tests drop
      uses: actions/upload-artifact@v2
      with:
        name: FunctionalTests_${{ matrix.configuration }}
        path: artifacts\GVFS.FunctionalTests

    - name: Upload FastFetch drop
      uses: actions/upload-artifact@v2
      with:
        name: FastFetch_${{ matrix.configuration }}
        path: artifacts\FastFetch

    - name: Upload installers
      uses: actions/upload-artifact@v2
      with:
        name: Installers_${{ matrix.configuration }}
        path: artifacts\GVFS.Installers

    - name: Upload NuGet packages
      uses: actions/upload-artifact@v2
      with:
        name: NuGetPackages_${{ matrix.configuration }}
        path: artifacts\NuGetPackages

  functional_test:
    runs-on: windows-2016
    name: Functional Tests
    needs: build

    # Only run the fuctional tests on pushes (not PRs)
    if: ${{ github.event_name == 'push' }}

    strategy:
      matrix:
        configuration: [ Debug, Release ]

    steps:
    # - name: Download installers
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: Installers_${{ matrix.configuration }}
    #     path: .\install

    - name: Download functional tests drop
      uses: actions/download-artifact@v2
      with:
        name: FunctionalTests_${{ matrix.configuration }}
        path: .\ft

    # - name: Install product
    #   shell: cmd
    #   run: install\install.bat

    - name: Install product
      shell: powershell
      run: |
        mkdir logs
        $client = new-object System.Net.WebClient
        $client.DownloadFile("https://github.com/microsoft/VFSForGit/releases/download/v1.0.21085.9/Git-2.31.0.vfs.0.1-64-bit.exe", "setup-git.exe")
        $client.DownloadFile("https://github.com/microsoft/VFSForGit/releases/download/v1.0.21085.9/SetupGVFS.1.0.21085.9.exe", "setup-vfs.exe")
        Start-Process -Wait "setup-git.exe" "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART /LOG=logs\git.log"
        Start-Process -Wait "setup-vfs.exe" "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART /LOG=logs\vfs.log"

    - name: Print product versions
      shell: cmd
      run: |
        git version
        gvfs version

    - name: Upload installation logs
      uses: actions/upload-artifact@v2
      with:
        name: InstallationLogs_${{ matrix.configuration }}
        path: .\logs

    - name: Run functional tests (${{ matrix.configuration }})
      shell: cmd
      run: |
        ft\GVFS.FunctionalTests.exe /result:TestResult.xml --replace-inbox-projfs
